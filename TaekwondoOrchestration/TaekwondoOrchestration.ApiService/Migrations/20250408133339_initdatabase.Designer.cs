// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaekwondoOrchestration.ApiService.Data;

#nullable disable

namespace TaekwondoOrchestration.ApiService.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250408133339_initdatabase")]
    partial class initdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Bruger", b =>
                {
                    b.Property<int>("BrugerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrugerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brugerkode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brugernavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bæltegrad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Efternavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fornavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrugerID");

                    b.ToTable("Brugere");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerKlub", b =>
                {
                    b.Property<int>("BrugerID")
                        .HasColumnType("int");

                    b.Property<int>("KlubID")
                        .HasColumnType("int");

                    b.HasKey("BrugerID", "KlubID");

                    b.HasIndex("KlubID");

                    b.ToTable("BrugerKlubber");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerProgram", b =>
                {
                    b.Property<int>("BrugerID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.HasKey("BrugerID", "ProgramID");

                    b.HasIndex("ProgramID");

                    b.ToTable("BrugerProgrammer");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerQuiz", b =>
                {
                    b.Property<int>("BrugerID")
                        .HasColumnType("int");

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.HasKey("BrugerID", "QuizID");

                    b.HasIndex("QuizID");

                    b.ToTable("BrugerQuizzer");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerØvelse", b =>
                {
                    b.Property<int>("BrugerID")
                        .HasColumnType("int");

                    b.Property<int>("ØvelseID")
                        .HasColumnType("int");

                    b.HasKey("BrugerID", "ØvelseID");

                    b.HasIndex("ØvelseID");

                    b.ToTable("BrugerØvelser");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Klub", b =>
                {
                    b.Property<int>("KlubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlubID"));

                    b.Property<string>("KlubNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KlubID");

                    b.ToTable("Klubber");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.KlubProgram", b =>
                {
                    b.Property<int>("KlubID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.HasKey("KlubID", "ProgramID");

                    b.HasIndex("ProgramID");

                    b.ToTable("KlubProgrammer");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.KlubQuiz", b =>
                {
                    b.Property<int>("KlubID")
                        .HasColumnType("int");

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.HasKey("KlubID", "QuizID");

                    b.HasIndex("QuizID");

                    b.ToTable("KlubQuizzer");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.KlubØvelse", b =>
                {
                    b.Property<int>("KlubID")
                        .HasColumnType("int");

                    b.Property<int>("ØvelseID")
                        .HasColumnType("int");

                    b.HasKey("KlubID", "ØvelseID");

                    b.HasIndex("ØvelseID");

                    b.ToTable("KlubØvelser");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Ordbog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BilledeLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DanskOrd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KoranskOrd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LydLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ordboger");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Pensum", b =>
                {
                    b.Property<int>("PensumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PensumID"));

                    b.Property<string>("PensumGrad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PensumID");

                    b.ToTable("Pensum");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.ProgramPlan", b =>
                {
                    b.Property<int>("ProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramID"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Længde")
                        .HasColumnType("int");

                    b.Property<DateTime>("OprettelseDato")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramID");

                    b.ToTable("ProgramPlans");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Quiz", b =>
                {
                    b.Property<int>("QuizID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizID"));

                    b.Property<int>("PensumID")
                        .HasColumnType("int");

                    b.Property<string>("QuizBeskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuizNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuizID");

                    b.HasIndex("PensumID");

                    b.ToTable("Quizzer");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Spørgsmål", b =>
                {
                    b.Property<int>("SpørgsmålID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpørgsmålID"));

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.Property<int>("SpørgsmålRækkefølge")
                        .HasColumnType("int");

                    b.Property<int>("SpørgsmålTid")
                        .HasColumnType("int");

                    b.Property<int?>("TeknikID")
                        .HasColumnType("int");

                    b.Property<int?>("TeoriID")
                        .HasColumnType("int");

                    b.Property<int?>("ØvelseID")
                        .HasColumnType("int");

                    b.HasKey("SpørgsmålID");

                    b.HasIndex("QuizID");

                    b.HasIndex("TeknikID");

                    b.HasIndex("TeoriID");

                    b.HasIndex("ØvelseID");

                    b.ToTable("Spørgsmål");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Teknik", b =>
                {
                    b.Property<int>("TeknikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeknikID"));

                    b.Property<int>("PensumID")
                        .HasColumnType("int");

                    b.Property<string>("TeknikBeskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeknikBillede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeknikLyd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeknikNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeknikVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeknikID");

                    b.HasIndex("PensumID");

                    b.ToTable("Teknikker");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Teori", b =>
                {
                    b.Property<int>("TeoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeoriID"));

                    b.Property<int>("PensumID")
                        .HasColumnType("int");

                    b.Property<string>("TeoriBeskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeoriBillede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeoriLyd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeoriNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeoriVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeoriID");

                    b.HasIndex("PensumID");

                    b.ToTable("Teorier");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Træning", b =>
                {
                    b.Property<int>("TræningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TræningID"));

                    b.Property<int?>("PensumID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int?>("QuizID")
                        .HasColumnType("int");

                    b.Property<int?>("TeknikID")
                        .HasColumnType("int");

                    b.Property<int?>("TeoriID")
                        .HasColumnType("int");

                    b.Property<int>("Tid")
                        .HasColumnType("int");

                    b.Property<int>("TræningRækkefølge")
                        .HasColumnType("int");

                    b.Property<int?>("ØvelseID")
                        .HasColumnType("int");

                    b.HasKey("TræningID");

                    b.HasIndex("PensumID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("QuizID");

                    b.HasIndex("TeknikID");

                    b.HasIndex("TeoriID");

                    b.HasIndex("ØvelseID");

                    b.ToTable("Træninger");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Øvelse", b =>
                {
                    b.Property<int>("ØvelseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ØvelseID"));

                    b.Property<int>("PensumID")
                        .HasColumnType("int");

                    b.Property<string>("ØvelseBeskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ØvelseBillede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ØvelseNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ØvelseSværhed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ØvelseTid")
                        .HasColumnType("int");

                    b.Property<string>("ØvelseVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ØvelseID");

                    b.HasIndex("PensumID");

                    b.ToTable("Øvelser");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerKlub", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Bruger", "Bruger")
                        .WithMany("BrugerKlubber")
                        .HasForeignKey("BrugerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Klub", "Klub")
                        .WithMany("BrugerKlubber")
                        .HasForeignKey("KlubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bruger");

                    b.Navigation("Klub");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerProgram", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Bruger", "Bruger")
                        .WithMany("BrugerProgrammer")
                        .HasForeignKey("BrugerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.ProgramPlan", "Plan")
                        .WithMany("BrugerProgrammer")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bruger");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerQuiz", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Bruger", "Bruger")
                        .WithMany("BrugerQuizzer")
                        .HasForeignKey("BrugerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Quiz", "Quiz")
                        .WithMany("BrugerQuizzer")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bruger");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.BrugerØvelse", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Bruger", "Bruger")
                        .WithMany("BrugerØvelser")
                        .HasForeignKey("BrugerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Øvelse", "Øvelse")
                        .WithMany("BrugerØvelses")
                        .HasForeignKey("ØvelseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bruger");

                    b.Navigation("Øvelse");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.KlubProgram", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Klub", "Klub")
                        .WithMany("KlubProgrammer")
                        .HasForeignKey("KlubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.ProgramPlan", "Plan")
                        .WithMany("KlubProgrammer")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klub");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.KlubQuiz", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Klub", "Klub")
                        .WithMany("KlubQuizzer")
                        .HasForeignKey("KlubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Quiz", "Quiz")
                        .WithMany("KlubQuizzer")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klub");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.KlubØvelse", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Klub", "Klub")
                        .WithMany("KlubØvelser")
                        .HasForeignKey("KlubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Øvelse", "Øvelse")
                        .WithMany("KlubØvelses")
                        .HasForeignKey("ØvelseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klub");

                    b.Navigation("Øvelse");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Quiz", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Pensum", "Pensum")
                        .WithMany("Quizzer")
                        .HasForeignKey("PensumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pensum");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Spørgsmål", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Quiz", "Quiz")
                        .WithMany("Spørgsmåls")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Teknik", "Teknik")
                        .WithMany()
                        .HasForeignKey("TeknikID");

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Teori", "Teori")
                        .WithMany()
                        .HasForeignKey("TeoriID");

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Øvelse", "Øvelse")
                        .WithMany()
                        .HasForeignKey("ØvelseID");

                    b.Navigation("Quiz");

                    b.Navigation("Teknik");

                    b.Navigation("Teori");

                    b.Navigation("Øvelse");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Teknik", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Pensum", "Pensum")
                        .WithMany("Teknikker")
                        .HasForeignKey("PensumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pensum");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Teori", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Pensum", "Pensum")
                        .WithMany("Teorier")
                        .HasForeignKey("PensumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pensum");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Træning", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Pensum", "Pensum")
                        .WithMany()
                        .HasForeignKey("PensumID");

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.ProgramPlan", "ProgramPlan")
                        .WithMany("Træninger")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizID");

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Teknik", "Teknik")
                        .WithMany()
                        .HasForeignKey("TeknikID");

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Teori", "Teori")
                        .WithMany()
                        .HasForeignKey("TeoriID");

                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Øvelse", "Øvelse")
                        .WithMany()
                        .HasForeignKey("ØvelseID");

                    b.Navigation("Pensum");

                    b.Navigation("ProgramPlan");

                    b.Navigation("Quiz");

                    b.Navigation("Teknik");

                    b.Navigation("Teori");

                    b.Navigation("Øvelse");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Øvelse", b =>
                {
                    b.HasOne("TaekwondoOrchestration.ApiService.Models.Pensum", "Pensum")
                        .WithMany("Øvelser")
                        .HasForeignKey("PensumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pensum");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Bruger", b =>
                {
                    b.Navigation("BrugerKlubber");

                    b.Navigation("BrugerProgrammer");

                    b.Navigation("BrugerQuizzer");

                    b.Navigation("BrugerØvelser");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Klub", b =>
                {
                    b.Navigation("BrugerKlubber");

                    b.Navigation("KlubProgrammer");

                    b.Navigation("KlubQuizzer");

                    b.Navigation("KlubØvelser");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Pensum", b =>
                {
                    b.Navigation("Quizzer");

                    b.Navigation("Teknikker");

                    b.Navigation("Teorier");

                    b.Navigation("Øvelser");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.ProgramPlan", b =>
                {
                    b.Navigation("BrugerProgrammer");

                    b.Navigation("KlubProgrammer");

                    b.Navigation("Træninger");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Quiz", b =>
                {
                    b.Navigation("BrugerQuizzer");

                    b.Navigation("KlubQuizzer");

                    b.Navigation("Spørgsmåls");
                });

            modelBuilder.Entity("TaekwondoOrchestration.ApiService.Models.Øvelse", b =>
                {
                    b.Navigation("BrugerØvelses");

                    b.Navigation("KlubØvelses");
                });
#pragma warning restore 612, 618
        }
    }
}
