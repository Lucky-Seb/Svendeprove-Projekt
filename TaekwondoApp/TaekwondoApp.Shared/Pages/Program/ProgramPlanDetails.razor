@page "/programplan/{programId:guid}"

@using AutoMapper
@using Microsoft.AspNetCore.SignalR.Client
@using TaekwondoApp.Shared.DTO
@using TaekwondoApp.Shared.Helper
@using TaekwondoApp.Shared.Models
@using TaekwondoApp.Shared.ServiceInterfaces
@using TaekwondoApp.Shared.Services

@inject NavigationManager NavigationManager
@inject IMapper _mapper
@inject IHttpClientFactory HttpClientFactory
@inject IAuthStateProvider AuthStateProvider
@inject IAuthenticationService AuthenticationService

<h2>@programPlan?.ProgramNavn</h2>

@if (isLoading)
{
    <p><em>Indlæser programinformation...</em></p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (programPlan == null)
{
    <p>Dette program kunne ikke findes.</p>
}
else
{
    <div class="card p-4 shadow-sm mb-4">
        <h4>@programPlan.ProgramNavn</h4>
        <p><strong>Beskrivelse:</strong> @programPlan.Beskrivelse</p>
        <p><strong>Oprettet:</strong> @programPlan.OprettelseDato.ToShortDateString()</p>
        <p><strong>Længde:</strong> @programPlan.Længde minutter</p>
    </div>

    @if (programPlan.Træninger?.Any() == true)
    {
        <h5 class="mt-4">Træningsplan</h5>
        <ol class="list-group list-group-numbered">
            @foreach (var træning in programPlan.Træninger.OrderBy(t => t.TræningRækkefølge))
            {
                <li class="list-group-item">
                    <div>
                        <strong>Step @træning.TræningRækkefølge</strong> – <span>@træning.Tid min</span>
                    </div>

                    @if (træning.Quiz != null)
                    {
                        <div><strong>Quiz:</strong> @træning.Quiz.QuizNavn</div>
                    }
                    else if (træning.Teori != null)
                    {
                        <div><strong>Teori:</strong> @træning.Teori.TeoriNavn</div>
                        <p>@træning.Teori.TeoriBeskrivelse</p>
                    }
                    else if (træning.Teknik != null)
                    {
                        <div><strong>Teknik:</strong> @træning.Teknik.TeknikNavn</div>
                        <p>@træning.Teknik.TeknikBeskrivelse</p>
                    }
                    else if (træning.Øvelse != null)
                    {
                        <div><strong>Øvelse:</strong> @træning.Øvelse.ØvelseNavn</div>
                        <p>@træning.Øvelse.ØvelseBeskrivelse</p>
                    }
                    else
                    {
                        <div><em>Ingen indhold tilknyttet</em></div>
                    }
                </li>
            }
        </ol>
    }
    else
    {
        <p>Ingen træninger er tilknyttet dette program.</p>
    }
}

<button class="btn btn-secondary mt-4" @onclick="GoBack">← Tilbage til Oversigt</button>

@code {
    [Parameter] public Guid programId { get; set; }
    private ProgramPlanDTO? programPlan;
    private HttpClient _apiClient;
    private string? errorMessage;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        _apiClient = HttpClientFactory.CreateClient("ApiClient");
        try
        {
            var response = await _apiClient.GetFromJsonAsync<ApiResponse<ProgramPlanDTO>>($"api/programplan/details/{programId}");
            if (response?.Success == true && response.Data != null)
            {
                programPlan = response.Data;
            }
            else
            {
                errorMessage = "Kunne ikke indlæse programdetaljer.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Fejl: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/programplan");
    }
}
