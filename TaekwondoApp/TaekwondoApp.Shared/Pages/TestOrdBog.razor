@page "/testordbog"
@inject HttpClient Http
@inject ISQLiteService SQLiteService
@using TaekwondoApp.Shared.DTO
@using TaekwondoApp.Shared.Services

<h3>Test Ordbog</h3>

@if (entries == null)
{
    <p><em>Loading...</em></p>
}
else if (!entries.Any())
{
    <p><em>No entries found.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Dansk</th>
                <th>Koransk</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in entries)
            {
                <tr>
                    <td>@entry.DanskOrd</td>
                    <td>@entry.KoranskOrd</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<OrdbogDTO> entries = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Check if we are connected to the internet
            if (Connectivity.NetworkAccess == NetworkAccess.Internet)
            {
                // Fetch from API if online
                var response = await Http.GetFromJsonAsync<List<OrdbogDTO>>("https://localhost:7478/api/ordbog");

                if (response != null)
                {
                    entries = response;
                }
            }
            else
            {
                // Fetch from SQLite if offline
                entries = await SQLiteService.GetAllEntriesAsync();
            }
        }
        catch (Exception ex)
        {
            // Handle any error in fetching data
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }
}
