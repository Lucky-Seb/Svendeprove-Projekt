@page "/account"

@* --- Using Statements --- *@
@using TaekwondoApp.Shared.DTO
@using TaekwondoApp.Shared.Models
@using TaekwondoApp.Shared.Services
@using TaekwondoApp.Shared.Helper
@using AutoMapper
@using Microsoft.AspNetCore.SignalR.Client
using Microsoft.Maui.Essentials

@* --- Dependency Injection --- *@
@inject NavigationManager NavigationManager
@inject IMapper _mapper
@inject IHttpClientFactory HttpClientFactory
@inject AuthStateProvider AuthStateProvider
@inject IAuthenticationService AuthenticationService


<h1>acount</h1>

@code {
    private BrugerDTO entryModel = new();
    private bool isEditing = false;
    private bool isSyncing = false;
    private bool syncFailed = false;
    private bool internet = true;
    private bool isAuthenticated;
    private string? role;
    private string searchTerm = string.Empty;
    private string errorMessage = string.Empty;
    private bool showDeleted = false;
    private string token = "";

    private HttpClient _apiClient;
    private HubConnection _hubConnection;


    // ========== Data Loading ==========
    private async Task LoadEntries()
    {
        var fronttoken = await AuthenticationService.GetTokenAsync();
        isAuthenticated = !string.IsNullOrEmpty(fronttoken);

        if (!isAuthenticated)
        {
            NavigationManager.NavigateTo("/login", true);
            return;
        }
        try
        {
            var brugerId = JwtParser.GetUserIdFromJwt(fronttoken);  // Make sure this is set correctly
            var response = await _apiClient.GetFromJsonAsync<ApiResponse<List<Bruger>>>("api/bruger/" + brugerId);

            if (response?.Success == true)
            {
                var bruger = _mapper.Map<BrugerDTO>(response.Data);
            }
            else
            {
                errorMessage = $"Server fetch error";

            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Server fetch error: {ex.Message}";
        }
        await InvokeAsync(StateHasChanged); // Use InvokeAsync for Blazor-specific updates
    }
}
