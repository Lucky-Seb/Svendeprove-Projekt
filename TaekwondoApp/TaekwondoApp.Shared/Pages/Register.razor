@page "/register"
@using Microsoft.AspNetCore.Components.Forms
@using TaekwondoApp.Shared.DTO
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
    </div>

    <div>
        <label for="password">Password:</label>
        <InputText id="password" type="password" @bind-Value="registerModel.Password" class="form-control" />
    </div>

    <div>
        <label for="confirmPassword">Confirm Password:</label>
        <InputText id="confirmPassword" type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private RegisterModel registerModel = new();
    private string errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = string.Empty;

        if (string.IsNullOrWhiteSpace(registerModel.Email) || string.IsNullOrWhiteSpace(registerModel.Password) || string.IsNullOrWhiteSpace(registerModel.ConfirmPassword))
        {
            errorMessage = "Email, password, and confirm password are required.";
            return;
        }

        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            errorMessage = "Passwords do not match.";
            return;
        }

        try
        {
            var encodedEmail = Uri.EscapeDataString(registerModel.Email);
            var response = await HttpClient.PostAsJsonAsync("https://localhost:7478/api/bruger/register", registerModel);

            if (response.IsSuccessStatusCode)
            {
                // Placeholder: Registration successful
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                errorMessage = "Registration failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Registration failed. Please try again.";
            Console.WriteLine($"Registration exception: {ex.Message}");
        }
    }

    public class RegisterModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}
