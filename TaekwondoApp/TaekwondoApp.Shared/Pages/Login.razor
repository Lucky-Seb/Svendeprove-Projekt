@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using TaekwondoApp.Shared.DTO
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
    </div>

    <div>
        <label for="password">Password:</label>
        <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private LoginModel loginModel = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;

        if (string.IsNullOrWhiteSpace(loginModel.Email) || string.IsNullOrWhiteSpace(loginModel.Password))
        {
            errorMessage = "Email and password are required.";
            return;
        }

        try
        {
            var encodedEmail = Uri.EscapeDataString(loginModel.Email);
            var response = await HttpClient.GetFromJsonAsync<BrugerDTO>($"https://localhost:7478/api/bruger/brugernavn/{encodedEmail}");

            if (response != null && response.Brugerkode == loginModel.Password)
            {
                // Placeholder: login successful
                NavigationManager.NavigateTo("/home");
            }
            else
            {
                errorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Login failed. Please try again.";
            Console.WriteLine($"Login exception: {ex.Message}");
        }
    }


    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
