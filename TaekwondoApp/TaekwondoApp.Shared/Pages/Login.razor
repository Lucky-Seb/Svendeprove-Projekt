@page "/login"
@using TaekwondoApp.Shared.DTO
@using TaekwondoApp.Shared.Models
@using AutoMapper
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IMapper Mapper

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind="loginModel.Email" />
    </div>

    <div>
        <label for="password">Password:</label>
        <InputPassword id="password" class="form-control" @bind="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

<p>
    Don't have an account? <a href="/register">Register</a>
</p>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    private async Task HandleLogin()
    {
        if (string.IsNullOrWhiteSpace(loginModel.Email) || string.IsNullOrWhiteSpace(loginModel.Password))
        {
            errorMessage = "Email and password are required.";
            return;
        }

        try
        {
            var encoded = Uri.EscapeDataString(loginModel.Email);
            var response = await Http.GetFromJsonAsync<BrugerDTO>($"https://localhost:7478/api/bruger/brugernavn/{encoded}");

            if (response != null && response.Brugerkode == loginModel.Password)
            {
                var bruger = Mapper.Map<Bruger>(response);
                Navigation.NavigateTo("/home");
            }
            else
            {
                errorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Login failed. Please try again.";
            Console.WriteLine($"Login exception: {ex.Message}");
        }
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}
